#!/usr/bin/env ruby

require 'rubygems'
require 'commander/import'
require 'shaman'
require 'pry' if ENV['SHAMAN_ENV'] == 'development'

program :version, Shaman::VERSION
program :description, 'Shaman cli for labs'
program :help_formatter, :compact

command :init do |c|
  c.syntax = 'shaman init'
  c.description = 'Initialize your project. EXAMPLE: shaman init -s abamobi'
  c.option '-s', '--search STRING', String, 'Shrink project selection'
  c.option '-f', '--favorites', 'Show only favorites'
  c.option '-p', '--platform PLATFORM', 'Choose platform'
  c.option '-i', '--project_id PROJECT', 'Choose project id'
  c.action do |_args, options|
    Shaman::Init.check
    Shaman::Init.init(options)
  end
end

command :deploy do |c|
  c.syntax = 'shaman deploy [environment]'
  c.description = 'Deploy a release to specified environment'
  c.option '-m', '--message MESSAGE', String, 'Changelog message'
  c.option '-f', '--file FILE', String, 'Release path'
  c.option '-p', '--proguard FILE', String, 'Add aditional proguard mapping'
  c.option '-t', '--token TOKEN', String, 'Use different user token'
  c.option '-c', '--config FILE', String, 'Use different config file'
  c.option '-g', '--git', 'Use git for message (overrides any manual settings!)'
  c.option '-C', '--commit COMMIT', String, 'Which commit to use instead of HEAD'
  c.option '-M', '--minimum_version', 'Set release as minimum version'
  c.option '-V', '--release_version RELEASE_VERSION', String, 'Set release version manually (Zip platform only)'
  c.action do |args, options|
    begin
      Shaman::Deploy.new(args, options).deploy
    rescue => e
      say_error e.message
      exit(-1)
    end
  end
end
